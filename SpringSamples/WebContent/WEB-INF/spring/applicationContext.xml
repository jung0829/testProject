<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"><!-- 항상 인스턴스가 어디에나 상주할 수 있도록 할 경우 xml에서 bean 내부에 설정해둔다. -->
		<property name="locations">
			<value>classpath:properties/jdbc.properties</value>	<!-- java 파일 접근 경로 설정 -->
		</property>
	</bean>
	
	<!-- DBMS : jdbc.properties 에 접근하여 작성된 속성이름을 Ajax 형식으로 value값으로 얻어와 셋팅에 사용 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"> 
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<property name="initialSize" value="${jdbc.initialSize}"/>
		<property name="maxActive" value="${jdbc.maxActive}"/>
		<property name="minIdle" value="${jdbc.initialSize}"/>
		<property name="maxWait" value="3000"/>	<!-- 최대 대기시간 3초설정 -->
		<!-- 최대 50개 까지의 쿼리문작성 가능하도록 설정 -->
		<property name="poolPreparedStatements" value="true"/>
		<property name="maxOpenPreparedStatements" value="50"/>
	</bean>

	<!-- mybatis setting 1. 위에 설정한 DBMS를 토대로 sqlSessionFactory 셋팅하여 지정영역내의 맵핑가능한 범위지정 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 팩토리 패턴 식으로 사용하도록 하는 것과 유사 -->
		<property name="dataSource" ref="dataSource"/><!-- 위에 id가 dataSource인 bean의 설정부를 연결하여 사용하도록 셋팅 -->
		<property name="mapperLocations" value="classpath:sqls/*.xml"/>
		<!-- 클래스는 src(classpath)에서 부터 시작. sqls폴더 안의, 모든 xml파일들을 mapper로서 취급한다.-->		
	</bean>
	
	<!-- mybatis setting 2. sqlSession 취득 : sqlSessionFactory셋팅을 토대로 sqlSession 셋팅 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"/>
		<constructor-arg index="1" value="SIMPLE"/>	<!-- sql은 SIMPLE/BATCH 두가지 타입. db동작 제대로 안한다면 다른것으로 변경해본다. -->
	</bean>
	
	<!-- 3. jdbc -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>


</beans>
